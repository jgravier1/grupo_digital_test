// Mocks generated by Mockito 5.4.6 from annotations
// in grupo_digital_test/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i13;

import 'package:dio/src/adapter.dart' as _i8;
import 'package:dio/src/cancel_token.dart' as _i18;
import 'package:dio/src/dio.dart' as _i11;
import 'package:dio/src/dio_mixin.dart' as _i7;
import 'package:dio/src/options.dart' as _i6;
import 'package:dio/src/response.dart' as _i10;
import 'package:dio/src/transformer.dart' as _i9;
import 'package:grupo_digital_test/data/datasources/location_datasource.dart'
    as _i3;
import 'package:grupo_digital_test/data/datasources/weather_datasource.dart'
    as _i12;
import 'package:grupo_digital_test/data/models/weather_response_model.dart'
    as _i2;
import 'package:grupo_digital_test/data/services/location_service.dart' as _i16;
import 'package:grupo_digital_test/domain/entities/weather_entity.dart' as _i4;
import 'package:grupo_digital_test/domain/repositories/weather_repository.dart'
    as _i5;
import 'package:grupo_digital_test/domain/usescases/get_last_five_days_usecase.dart'
    as _i15;
import 'package:grupo_digital_test/domain/usescases/get_weather_usecase.dart'
    as _i14;
import 'package:internet_connection_checker_plus/internet_connection_checker_plus.dart'
    as _i20;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i17;
import 'package:shared_preferences/src/shared_preferences_legacy.dart' as _i19;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeWeatherResponseModel_0 extends _i1.SmartFake
    implements _i2.WeatherResponseModel {
  _FakeWeatherResponseModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLocationResult_1 extends _i1.SmartFake
    implements _i3.LocationResult {
  _FakeLocationResult_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWeatherEntity_2 extends _i1.SmartFake implements _i4.WeatherEntity {
  _FakeWeatherEntity_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWeatherRepository_3 extends _i1.SmartFake
    implements _i5.WeatherRepository {
  _FakeWeatherRepository_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBaseOptions_4 extends _i1.SmartFake implements _i6.BaseOptions {
  _FakeBaseOptions_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInterceptors_5 extends _i1.SmartFake implements _i7.Interceptors {
  _FakeInterceptors_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeHttpClientAdapter_6 extends _i1.SmartFake
    implements _i8.HttpClientAdapter {
  _FakeHttpClientAdapter_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransformer_7 extends _i1.SmartFake implements _i9.Transformer {
  _FakeTransformer_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_8<T1> extends _i1.SmartFake implements _i10.Response<T1> {
  _FakeResponse_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDio_9 extends _i1.SmartFake implements _i11.Dio {
  _FakeDio_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDuration_10 extends _i1.SmartFake implements Duration {
  _FakeDuration_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [WeatherDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherDataSource extends _i1.Mock implements _i12.WeatherDataSource {
  MockWeatherDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<_i2.WeatherResponseModel> getWeather({String? cityName}) =>
      (super.noSuchMethod(
            Invocation.method(#getWeather, [], {#cityName: cityName}),
            returnValue: _i13.Future<_i2.WeatherResponseModel>.value(
              _FakeWeatherResponseModel_0(
                this,
                Invocation.method(#getWeather, [], {#cityName: cityName}),
              ),
            ),
          )
          as _i13.Future<_i2.WeatherResponseModel>);

  @override
  _i13.Future<_i2.WeatherResponseModel> getLastFiveDays({String? cityName}) =>
      (super.noSuchMethod(
            Invocation.method(#getLastFiveDays, [], {#cityName: cityName}),
            returnValue: _i13.Future<_i2.WeatherResponseModel>.value(
              _FakeWeatherResponseModel_0(
                this,
                Invocation.method(#getLastFiveDays, [], {#cityName: cityName}),
              ),
            ),
          )
          as _i13.Future<_i2.WeatherResponseModel>);
}

/// A class which mocks [LocationDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationDataSource extends _i1.Mock
    implements _i3.LocationDataSource {
  MockLocationDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<bool> isLocationServiceEnabled() =>
      (super.noSuchMethod(
            Invocation.method(#isLocationServiceEnabled, []),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<_i3.LocationPermissionStatus> getPermissionStatus() =>
      (super.noSuchMethod(
            Invocation.method(#getPermissionStatus, []),
            returnValue: _i13.Future<_i3.LocationPermissionStatus>.value(
              _i3.LocationPermissionStatus.granted,
            ),
          )
          as _i13.Future<_i3.LocationPermissionStatus>);

  @override
  _i13.Future<_i3.LocationPermissionStatus> requestPermission() =>
      (super.noSuchMethod(
            Invocation.method(#requestPermission, []),
            returnValue: _i13.Future<_i3.LocationPermissionStatus>.value(
              _i3.LocationPermissionStatus.granted,
            ),
          )
          as _i13.Future<_i3.LocationPermissionStatus>);

  @override
  _i13.Future<_i3.LocationResult> getCurrentLocationWithCity() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentLocationWithCity, []),
            returnValue: _i13.Future<_i3.LocationResult>.value(
              _FakeLocationResult_1(
                this,
                Invocation.method(#getCurrentLocationWithCity, []),
              ),
            ),
          )
          as _i13.Future<_i3.LocationResult>);

  @override
  _i13.Future<bool> openAppSettings() =>
      (super.noSuchMethod(
            Invocation.method(#openAppSettings, []),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);
}

/// A class which mocks [WeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepository extends _i1.Mock implements _i5.WeatherRepository {
  MockWeatherRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<_i4.WeatherEntity> getWeather({String? cityName}) =>
      (super.noSuchMethod(
            Invocation.method(#getWeather, [], {#cityName: cityName}),
            returnValue: _i13.Future<_i4.WeatherEntity>.value(
              _FakeWeatherEntity_2(
                this,
                Invocation.method(#getWeather, [], {#cityName: cityName}),
              ),
            ),
          )
          as _i13.Future<_i4.WeatherEntity>);

  @override
  _i13.Future<_i4.WeatherEntity> getLastFiveDays({String? cityName}) =>
      (super.noSuchMethod(
            Invocation.method(#getLastFiveDays, [], {#cityName: cityName}),
            returnValue: _i13.Future<_i4.WeatherEntity>.value(
              _FakeWeatherEntity_2(
                this,
                Invocation.method(#getLastFiveDays, [], {#cityName: cityName}),
              ),
            ),
          )
          as _i13.Future<_i4.WeatherEntity>);
}

/// A class which mocks [GetWeatherUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWeatherUseCase extends _i1.Mock implements _i14.GetWeatherUseCase {
  MockGetWeatherUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.WeatherRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeWeatherRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.WeatherRepository);

  @override
  _i13.Future<_i4.WeatherEntity> execute({String? cityName}) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [], {#cityName: cityName}),
            returnValue: _i13.Future<_i4.WeatherEntity>.value(
              _FakeWeatherEntity_2(
                this,
                Invocation.method(#execute, [], {#cityName: cityName}),
              ),
            ),
          )
          as _i13.Future<_i4.WeatherEntity>);
}

/// A class which mocks [GetLastFiveDaysUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetLastFiveDaysUseCase extends _i1.Mock
    implements _i15.GetLastFiveDaysUseCase {
  MockGetLastFiveDaysUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.WeatherRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeWeatherRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.WeatherRepository);

  @override
  _i13.Future<_i4.WeatherEntity> execute({String? cityName}) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [], {#cityName: cityName}),
            returnValue: _i13.Future<_i4.WeatherEntity>.value(
              _FakeWeatherEntity_2(
                this,
                Invocation.method(#execute, [], {#cityName: cityName}),
              ),
            ),
          )
          as _i13.Future<_i4.WeatherEntity>);
}

/// A class which mocks [LocationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationService extends _i1.Mock implements _i16.LocationService {
  MockLocationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<String> getCityNameForWeatherAPI() =>
      (super.noSuchMethod(
            Invocation.method(#getCityNameForWeatherAPI, []),
            returnValue: _i13.Future<String>.value(
              _i17.dummyValue<String>(
                this,
                Invocation.method(#getCityNameForWeatherAPI, []),
              ),
            ),
          )
          as _i13.Future<String>);

  @override
  _i13.Future<_i3.LocationResult> getCurrentLocationResult() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentLocationResult, []),
            returnValue: _i13.Future<_i3.LocationResult>.value(
              _FakeLocationResult_1(
                this,
                Invocation.method(#getCurrentLocationResult, []),
              ),
            ),
          )
          as _i13.Future<_i3.LocationResult>);

  @override
  _i13.Future<bool> openAppSettings() =>
      (super.noSuchMethod(
            Invocation.method(#openAppSettings, []),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> isLocationServiceEnabled() =>
      (super.noSuchMethod(
            Invocation.method(#isLocationServiceEnabled, []),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<_i3.LocationPermissionStatus> getPermissionStatus() =>
      (super.noSuchMethod(
            Invocation.method(#getPermissionStatus, []),
            returnValue: _i13.Future<_i3.LocationPermissionStatus>.value(
              _i3.LocationPermissionStatus.granted,
            ),
          )
          as _i13.Future<_i3.LocationPermissionStatus>);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i11.Dio {
  MockDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.BaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeBaseOptions_4(this, Invocation.getter(#options)),
          )
          as _i6.BaseOptions);

  @override
  _i7.Interceptors get interceptors =>
      (super.noSuchMethod(
            Invocation.getter(#interceptors),
            returnValue: _FakeInterceptors_5(
              this,
              Invocation.getter(#interceptors),
            ),
          )
          as _i7.Interceptors);

  @override
  _i8.HttpClientAdapter get httpClientAdapter =>
      (super.noSuchMethod(
            Invocation.getter(#httpClientAdapter),
            returnValue: _FakeHttpClientAdapter_6(
              this,
              Invocation.getter(#httpClientAdapter),
            ),
          )
          as _i8.HttpClientAdapter);

  @override
  _i9.Transformer get transformer =>
      (super.noSuchMethod(
            Invocation.getter(#transformer),
            returnValue: _FakeTransformer_7(
              this,
              Invocation.getter(#transformer),
            ),
          )
          as _i9.Transformer);

  @override
  set options(_i6.BaseOptions? value) => super.noSuchMethod(
    Invocation.setter(#options, value),
    returnValueForMissingStub: null,
  );

  @override
  set httpClientAdapter(_i8.HttpClientAdapter? value) => super.noSuchMethod(
    Invocation.setter(#httpClientAdapter, value),
    returnValueForMissingStub: null,
  );

  @override
  set transformer(_i9.Transformer? value) => super.noSuchMethod(
    Invocation.setter(#transformer, value),
    returnValueForMissingStub: null,
  );

  @override
  void close({bool? force = false}) => super.noSuchMethod(
    Invocation.method(#close, [], {#force: force}),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Future<_i10.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i18.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #head,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
            returnValue: _i13.Future<_i10.Response<T>>.value(
              _FakeResponse_8<T>(
                this,
                Invocation.method(
                  #head,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i10.Response<T>>);

  @override
  _i13.Future<_i10.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i18.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #headUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
            returnValue: _i13.Future<_i10.Response<T>>.value(
              _FakeResponse_8<T>(
                this,
                Invocation.method(
                  #headUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
          )
          as _i13.Future<_i10.Response<T>>);

  @override
  _i13.Future<_i10.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i18.CancelToken? cancelToken,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i13.Future<_i10.Response<T>>.value(
              _FakeResponse_8<T>(
                this,
                Invocation.method(
                  #get,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i10.Response<T>>);

  @override
  _i13.Future<_i10.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i18.CancelToken? cancelToken,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i13.Future<_i10.Response<T>>.value(
              _FakeResponse_8<T>(
                this,
                Invocation.method(
                  #getUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i10.Response<T>>);

  @override
  _i13.Future<_i10.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i18.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i13.Future<_i10.Response<T>>.value(
              _FakeResponse_8<T>(
                this,
                Invocation.method(
                  #post,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i10.Response<T>>);

  @override
  _i13.Future<_i10.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i18.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #postUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i13.Future<_i10.Response<T>>.value(
              _FakeResponse_8<T>(
                this,
                Invocation.method(
                  #postUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i10.Response<T>>);

  @override
  _i13.Future<_i10.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i18.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i13.Future<_i10.Response<T>>.value(
              _FakeResponse_8<T>(
                this,
                Invocation.method(
                  #put,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i10.Response<T>>);

  @override
  _i13.Future<_i10.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i18.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #putUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i13.Future<_i10.Response<T>>.value(
              _FakeResponse_8<T>(
                this,
                Invocation.method(
                  #putUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i10.Response<T>>);

  @override
  _i13.Future<_i10.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i18.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i13.Future<_i10.Response<T>>.value(
              _FakeResponse_8<T>(
                this,
                Invocation.method(
                  #patch,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i10.Response<T>>);

  @override
  _i13.Future<_i10.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i18.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patchUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i13.Future<_i10.Response<T>>.value(
              _FakeResponse_8<T>(
                this,
                Invocation.method(
                  #patchUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i10.Response<T>>);

  @override
  _i13.Future<_i10.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i18.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
            returnValue: _i13.Future<_i10.Response<T>>.value(
              _FakeResponse_8<T>(
                this,
                Invocation.method(
                  #delete,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i10.Response<T>>);

  @override
  _i13.Future<_i10.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i18.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #deleteUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
            returnValue: _i13.Future<_i10.Response<T>>.value(
              _FakeResponse_8<T>(
                this,
                Invocation.method(
                  #deleteUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
          )
          as _i13.Future<_i10.Response<T>>);

  @override
  _i13.Future<_i10.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i6.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i18.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i6.FileAccessMode? fileAccessMode = _i6.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i6.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #download,
              [urlPath, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
            returnValue: _i13.Future<_i10.Response<dynamic>>.value(
              _FakeResponse_8<dynamic>(
                this,
                Invocation.method(
                  #download,
                  [urlPath, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i10.Response<dynamic>>);

  @override
  _i13.Future<_i10.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i6.ProgressCallback? onReceiveProgress,
    _i18.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i6.FileAccessMode? fileAccessMode = _i6.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i6.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #downloadUri,
              [uri, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
            returnValue: _i13.Future<_i10.Response<dynamic>>.value(
              _FakeResponse_8<dynamic>(
                this,
                Invocation.method(
                  #downloadUri,
                  [uri, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i10.Response<dynamic>>);

  @override
  _i13.Future<_i10.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i18.CancelToken? cancelToken,
    _i6.Options? options,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #request,
              [url],
              {
                #data: data,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i13.Future<_i10.Response<T>>.value(
              _FakeResponse_8<T>(
                this,
                Invocation.method(
                  #request,
                  [url],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i10.Response<T>>);

  @override
  _i13.Future<_i10.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i18.CancelToken? cancelToken,
    _i6.Options? options,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #requestUri,
              [uri],
              {
                #data: data,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i13.Future<_i10.Response<T>>.value(
              _FakeResponse_8<T>(
                this,
                Invocation.method(
                  #requestUri,
                  [uri],
                  {
                    #data: data,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i10.Response<T>>);

  @override
  _i13.Future<_i10.Response<T>> fetch<T>(_i6.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
            Invocation.method(#fetch, [requestOptions]),
            returnValue: _i13.Future<_i10.Response<T>>.value(
              _FakeResponse_8<T>(
                this,
                Invocation.method(#fetch, [requestOptions]),
              ),
            ),
          )
          as _i13.Future<_i10.Response<T>>);

  @override
  _i11.Dio clone({
    _i6.BaseOptions? options,
    _i7.Interceptors? interceptors,
    _i8.HttpClientAdapter? httpClientAdapter,
    _i9.Transformer? transformer,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#clone, [], {
              #options: options,
              #interceptors: interceptors,
              #httpClientAdapter: httpClientAdapter,
              #transformer: transformer,
            }),
            returnValue: _FakeDio_9(
              this,
              Invocation.method(#clone, [], {
                #options: options,
                #interceptors: interceptors,
                #httpClientAdapter: httpClientAdapter,
                #transformer: transformer,
              }),
            ),
          )
          as _i11.Dio);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i19.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() =>
      (super.noSuchMethod(
            Invocation.method(#getKeys, []),
            returnValue: <String>{},
          )
          as Set<String>);

  @override
  Object? get(String? key) =>
      (super.noSuchMethod(Invocation.method(#get, [key])) as Object?);

  @override
  bool? getBool(String? key) =>
      (super.noSuchMethod(Invocation.method(#getBool, [key])) as bool?);

  @override
  int? getInt(String? key) =>
      (super.noSuchMethod(Invocation.method(#getInt, [key])) as int?);

  @override
  double? getDouble(String? key) =>
      (super.noSuchMethod(Invocation.method(#getDouble, [key])) as double?);

  @override
  String? getString(String? key) =>
      (super.noSuchMethod(Invocation.method(#getString, [key])) as String?);

  @override
  bool containsKey(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [key]),
            returnValue: false,
          )
          as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(#getStringList, [key]))
          as List<String>?);

  @override
  _i13.Future<bool> setBool(String? key, bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setBool, [key, value]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> setInt(String? key, int? value) =>
      (super.noSuchMethod(
            Invocation.method(#setInt, [key, value]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> setDouble(String? key, double? value) =>
      (super.noSuchMethod(
            Invocation.method(#setDouble, [key, value]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> setString(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setString, [key, value]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> setStringList(String? key, List<String>? value) =>
      (super.noSuchMethod(
            Invocation.method(#setStringList, [key, value]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> remove(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#remove, [key]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> commit() =>
      (super.noSuchMethod(
            Invocation.method(#commit, []),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> clear() =>
      (super.noSuchMethod(
            Invocation.method(#clear, []),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);
}

/// A class which mocks [InternetConnection].
///
/// See the documentation for Mockito's code generation for more information.
class MockInternetConnection extends _i1.Mock
    implements _i20.InternetConnection {
  MockInternetConnection() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get enableStrictCheck =>
      (super.noSuchMethod(
            Invocation.getter(#enableStrictCheck),
            returnValue: false,
          )
          as bool);

  @override
  Duration get checkInterval =>
      (super.noSuchMethod(
            Invocation.getter(#checkInterval),
            returnValue: _FakeDuration_10(
              this,
              Invocation.getter(#checkInterval),
            ),
          )
          as Duration);

  @override
  _i13.Future<bool> get hasInternetAccess =>
      (super.noSuchMethod(
            Invocation.getter(#hasInternetAccess),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<_i20.InternetStatus> get internetStatus =>
      (super.noSuchMethod(
            Invocation.getter(#internetStatus),
            returnValue: _i13.Future<_i20.InternetStatus>.value(
              _i20.InternetStatus.connected,
            ),
          )
          as _i13.Future<_i20.InternetStatus>);

  @override
  _i13.Stream<_i20.InternetStatus> get onStatusChange =>
      (super.noSuchMethod(
            Invocation.getter(#onStatusChange),
            returnValue: _i13.Stream<_i20.InternetStatus>.empty(),
          )
          as _i13.Stream<_i20.InternetStatus>);

  @override
  void setIntervalAndResetTimer(Duration? duration) => super.noSuchMethod(
    Invocation.method(#setIntervalAndResetTimer, [duration]),
    returnValueForMissingStub: null,
  );
}
